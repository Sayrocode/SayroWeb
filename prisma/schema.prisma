// Copiado desde el proyecto raíz para generación del cliente Prisma en Vercel
generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Property {
  id                 Int     @id @default(autoincrement())
  publicId           String  @unique
  title              String?
  titleImageFull     String?
  titleImageThumb    String?
  propertyType       String?
  status             String?
  bedrooms           Int?
  bathrooms          Float?
  parkingSpaces      Int?
  lotSize            Float?
  constructionSize   Float?
  brokerName         String?
  locationText       String?
  operationsJson     String?
  propertyImagesJson String?
  ebDetailJson       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  media      MediaObject[]
  leads      Lead[]
  @@index([publicId])
  @@index([propertyType])
  @@index([status])
}

model User {
  id            Int       @id @default(autoincrement())
  username      String    @unique
  passwordHash  String
  role          String    @default("ADMIN")
  lastLoginAt   DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  @@index([username])
}

model MediaObject {
  id         Int       @id @default(autoincrement())
  key        String    @unique
  mimeType   String
  size       Int
  data       Bytes
  filename   String?
  property   Property? @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  propertyId Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  @@index([propertyId])
}

model Lead {
  id               Int       @id @default(autoincrement())
  source           String
  name             String?
  email            String?
  phone            String?
  message          String?
  property         Property? @relation(fields: [propertyId], references: [id], onDelete: SetNull)
  propertyId       Int?
  propertyPublicId String?
  campaignId       String?
  adsetId          String?
  adId             String?
  fbclid           String?
  utm_source       String?
  utm_medium       String?
  utm_campaign     String?
  utm_content      String?
  utm_term         String?
  pagePath         String?
  referrer         String?
  createdAt        DateTime  @default(now())
  @@index([source])
  @@index([propertyId])
  @@index([utm_source, utm_campaign])
}

model EgoContact {
  id            Int       @id @default(autoincrement())
  personId      String?   @unique
  name          String?
  role          String?
  phone         String?
  email         String?
  createdText   String?
  createdAtEgo  DateTime?
  responsible   String?
  rawJson       String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  @@index([personId])
  @@index([email])
  @@index([phone])
}

